# Make sure Region is a factor
df_wide$Region <- as.factor(df_wide$Region)
# Fit interaction model
# Price_NSA is the dependent variable
# Seasonality is the main effect
# Region is a factor with multiple levels
# The * operator in R formula means "main effects + interaction"
model_interact <- lm(Price_NSA ~ Seasonality * Region, data = df_wide)
# Summarize regression
summary(model_interact)
# If not installed:
# install.packages("car")
library(car)
# If not installed:
install.packages("car")
library(car)
library(car)
Anova(model_interact, type = "III")
model_interact <- lm(Price_NSA ~ Seasonality * Region, data = df_wide)
summary(model_interact)
Anova(model_interact, type = "III")
summary(model_interact)
Anova(model_interact, type = "III")
model_interact <- lm(Price_NSA ~ Seasonality * Region, data = df_wide)
summary(model_interact)
Anova(model_interact, type = "III")
install.packages("modelsummary")
library(modelsummary)
library(modelsummary)
modelsummary(model_interact,
output = "regression_table.docx",
statistic = "({std.error}) {stars}",
stars = TRUE,
title = "Regression Results: Housing Prices by Seasonality and Region")
install.packages("pandoc")
library(pandoc)
modelsummary(model_interact,
output = "regression_table.docx",
statistic = "({std.error}) {stars}",
stars = TRUE,
title = "Regression Results: Housing Prices by Seasonality and Region")
modelsummary(model_interact,
output = "regression_table.docx",
statistic = "({std.error}) {stars}",
stars = TRUE,
title = "Regression Results: Housing Prices by Seasonality and Region")
install.packages("sjPlot")
library(sjPlot)
library(webshot2)
# Summarize regression
summary(model_interact)
Anova(model_interact, type = "III")
model_interact <- lm(Price_NSA ~ Seasonality * Region, data = df_wide)
summary(model_interact)
Anova(model_interact, type = "III")
tab <- tab_model(anova_model,
file = "anova_table.html",
show.df = TRUE,
show.stat = TRUE,
show.p = TRUE,
title = "Sold 2-Way-ANOVA")
tab <- tab_model(Anova(model_interact, type = "III"),
file = "anova_table.html",
show.df = TRUE,
show.stat = TRUE,
show.p = TRUE,
title = "Sold 2-Way-ANOVA")
# Save as SVG
webshot("anova_table.html", file = "anova_table.svg")
# Convert your regression model into a tidy dataframe
model_df <- tidy(model_interact)
library(rempsyc)
library(broom)
# Convert your regression model into a tidy dataframe
model_df <- tidy(model_interact)
# Rename columns for clarity (optional)
names(model_df) <- c("Term", "Estimate", "Std. Error", "t-value", "p-value")
# Create a nice formatted table
regression_table <- nice_table(
model_df,
title = c("Table 1", "Regression Model Summary"),
note = c("Data source: df_wide.",
"* p < .05, ** p < .01, *** p < .001")
)
# Adjust column widths for readability
regression_table <- width(regression_table, j = 1, width = 3)
regression_table <- width(regression_table, j = 2:5, width = 1.5)
# Save the formatted table as SVG
save_as_image(regression_table, path = "Regression_Model_Summary.svg")
model_df
model_df <- nice_table(model_interact)
# Rename columns for clarity (optional)
names(model_df) <- c("Term", "Estimate", "Std. Error", "t-value", "p-value")
# Generate table with significance stars
regression_table <- nice_table(model_df,
title = "Regression Model Summary",
note = "Data source: df_wide.\n* p < .05, ** p < .01, *** p < .001")
# Adjust column widths for readability
regression_table <- width(regression_table, j = 1, width = 3)
regression_table <- width(regression_table, j = 2:5, width = 1)
model_df <- nice_table(model_interact)
# Rename columns for clarity (optional)
names(model_df) <- c("Term", "Estimate", "Std. Error", "t-value", "p-value")
# Generate table with significance stars
regression_table <- nice_table(model_df,
title = "Regression Model Summary",
note = "Data source: df_wide.\n* p < .05, ** p < .01, *** p < .001")
# Adjust column widths for readability
regression_table <- width(regression_table, j = 1, width = 3)
regression_table <- width(regression_table, j = 2:5, width = 1)
# Save the formatted table as SVG
save_as_image(regression_table, path = "Regression_Model_Summary.svg")
# Convert regression model into a tidy dataframe
model_df <- tidy(model_interact)
# Rename columns for clarity
names(model_df) <- c("Term", "Estimate", "Std. Error", "t-value", "p-value")
# Function to add stars based on significance
model_df$Signif <- ifelse(model_df$`p-value` < .001, "***",
ifelse(model_df$`p-value` < .01, "**",
ifelse(model_df$`p-value` < .05, "*", "")))
# Combine Estimate with significance stars
model_df$Estimate <- paste0(model_df$Estimate, model_df$Signif)
# Drop Signif column after merging with Estimate
model_df <- model_df[, -which(names(model_df) == "Signif")]
# Create the table with stars
regression_table <- nice_table(model_df,
title = "Regression Model Summary",
note = "Data source: df_wide.\n* p < .05, ** p < .01, *** p < .001")
# Adjust column widths
regression_table <- width(regression_table, j = 1, width = 3)
regression_table <- width(regression_table, j = 2:5, width = 1)
regression_table
# Convert your regression model into a tidy dataframe
model_df <- tidy(model_interact)
# Rename columns for clarity
names(model_df) <- c("Term", "Estimate", "Std. Error", "t-value", "p-value")
# Add stars based on significance levels
model_df$Signif <- ifelse(model_df$`p-value` < .001, "***",
ifelse(model_df$`p-value` < .01, "**",
ifelse(model_df$`p-value` < .05, "*", "")))
# Merge stars with p-value column
model_df$`p-value` <- paste0(round(model_df$`p-value`, 3), " ", model_df$Signif)
# Drop Signif column
model_df <- model_df[, -which(names(model_df) == "Signif")]
# Create the final table with stars clearly shown next to p-values
regression_table <- nice_table(model_df,
title = "Regression Model Summary",
note = "Data source: df_wide.\n* p < .05, ** p < .01, *** p < .001")
# Adjust column widths
regression_table <- width(regression_table, j = 1, width = 3)
regression_table <- width(regression_table, j = 2:5, width = 1)
regression_table
# Create the final table with stars clearly shown next to p-values
regression_table <- nice_table(model_df,
title = c("Table 9","Regression Model Summary"),
note = "Data source: HPI data, 1991-2024
\n* p < .05, ** p < .01, *** p < .001")
# Adjust column widths
regression_table <- width(regression_table, j = 1, width = 3)
regression_table <- width(regression_table, j = 2:5, width = 1)
regression_table
save_as_image(regression_table, path = "GEO_RM_Table.svg")
###########
coef_df <- data.frame(
Term = c("(Intercept)", "Seasonality", "RegionEast South Central",
"RegionMiddle Atlantic", "RegionMountain", "RegionNew England",
"Seasonality:RegionEast South Central", "Seasonality:RegionMountain",
"Seasonality:RegionNew England", ...),
Estimate = ...,
Std.Error = ...,
t.value = ...,
p.value = ...,
stringsAsFactors = FALSE
)
# Number of rows
n <- nrow(coef_df)
# Midpoint (round up if odd number of rows)
mid <- ceiling(n / 2)
# Make sure Region is a factor
# Make sure Region is a factor
df_wide$Region <- as.factor(df_wide$Region)
# Relevel so that "USA" is the reference level
df_wide$Region <- relevel(df_wide$Region, ref = "USA")
# Now fit the interaction model with USA as the baseline
model_interact <- lm(Price_NSA ~ Seasonality * Region, data = df_wide)
summary(model_interact)
Anova(model_interact, type = "III")
# Convert your regression model into a tidy dataframe
model_df <- tidy(model_interact)
# Rename columns for clarity
names(model_df) <- c("Term", "Estimate", "Std. Error", "t-value", "p-value")
# Add stars based on significance levels
model_df$Signif <- ifelse(model_df$`p-value` < .001, "***",
ifelse(model_df$`p-value` < .01, "**",
ifelse(model_df$`p-value` < .05, "*", "")))
# Merge stars with p-value column
model_df$`p-value` <- paste0(round(model_df$`p-value`, 3), " ", model_df$Signif)
# Drop Signif column
model_df <- model_df[, -which(names(model_df) == "Signif")]
# Create the final table with stars clearly shown next to p-values
regression_table <- nice_table(model_df,
title = c("Table 9","Regression Model Summary"),
note = "Data source: HPI data, 1991-2024
\n* p < .05, ** p < .01, *** p < .001")
# Adjust column widths
regression_table <- width(regression_table, j = 1, width = 3)
regression_table <- width(regression_table, j = 2:5, width = 1)
regression_table
Anova(model_interact, type = "III")
save_as_image(regression_table, path = "GEO_RM_Table.svg")
# Keep only the interaction terms (which contain a colon ':')
model_df_interactions <- subset(model_df, grepl(":", Term))
# Then create your table from the filtered data frame
regression_table <- nice_table(model_df_interactions,
title = c("Table 9","Regression Model Summary"),
note = "Data source: HPI data, 1991-2024
\n* p < .05, ** p < .01, *** p < .001")
# Adjust column widths
regression_table <- width(regression_table, j = 1, width = 3)
regression_table <- width(regression_table, j = 2:5, width = 1)
regression_table
# Convert your regression model into a tidy dataframe
model_df <- tidy(model_interact)
# Rename columns for clarity
names(model_df) <- c("Term", "Estimate", "Std. Error", "t-value", "p-value")
# Add stars based on significance levels
model_df$Signif <- ifelse(model_df$`p-value` < .001, "***",
ifelse(model_df$`p-value` < .01, "**",
ifelse(model_df$`p-value` < .05, "*", "")))
# Merge stars with p-value column
model_df$`p-value` <- paste0(round(model_df$`p-value`, 3), " ", model_df$Signif)
# Drop Signif column
model_df <- model_df[, -which(names(model_df) == "Signif")]
# Create the final table with stars clearly shown next to p-values
regression_table <- nice_table(model_df,
title = c("Table 9","Regression Model Summary"),
note = "Data source: HPI data, 1991-2024
\n* p < .05, ** p < .01, *** p < .001")
# Adjust column widths
regression_table <- width(regression_table, j = 1, width = 3)
regression_table <- width(regression_table, j = 2:5, width = 1)
regression_table
# Create the final table with stars clearly shown next to p-values
# Keep only the interaction terms (which contain a colon ':')
model_df_interactions <- subset(model_df, grepl(":", Term))
# Then create your table from the filtered data frame
regression_table <- nice_table(model_df_interactions,
title = c("Table 9","Regression Model Summary"),
note = "Data source: HPI data, 1991-2024
\n* p < .05, ** p < .01, *** p < .001")
# Adjust column widths
regression_table <- width(regression_table, j = 1, width = 3)
regression_table <- width(regression_table, j = 2:5, width = 1)
regression_table
save_as_image(regression_table, path = "GEO_RM_Table.svg")
regression_table <- width(regression_table, j = 2:5, width = 1.5)
regression_table
save_as_image(regression_table, path = "GEO_RM_Table.svg")
regression_table <- width(regression_table, j = 2:5, width = 1.8)
regression_table
save_as_image(regression_table, path = "GEO_RM_Table.svg")
regression_table <- width(regression_table, j = 2:5, width = 1.6)
regression_table
save_as_image(regression_table, path = "GEO_RM_Table.svg")
summary(model_interact)
Anova(model_interact, type = "III")
anova_df <- as.data.frame(anova_model)
anova_model <- Anova(model_interact, type = "III")
anova_df <- as.data.frame(anova_model)
# 3) Move row names (Term names) into a column
anova_df$Term <- rownames(anova_df)
anova_df <- anova_df %>%
relocate(Term)  # place 'Term' as the first column
# 4) Rename columns for clarity (match your preference)
colnames(anova_df) <- c("Term", "Sum Sq", "Df", "F value", "Pr(>F)")
# 5) (Optional) Add significance stars next to p-values
anova_df$Signif <- ifelse(anova_df$`Pr(>F)` < .001, "***",
ifelse(anova_df$`Pr(>F)` < .01, "**",
ifelse(anova_df$`Pr(>F)` < .05, "*", "")))
anova_df$`Pr(>F)` <- paste0(round(anova_df$`Pr(>F)`, 3), " ", anova_df$Signif)
# Remove the temporary 'Signif' column
anova_df <- anova_df %>% select(-Signif)
# 6) Create a "nice_table" (depending on your library; e.g. expss, pixiedust, etc.)
#    This step will vary based on how you format tables in your workflow.
regression_table <- nice_table(
anova_df,
title = c("Table X", "ANOVA Model Summary"),
note  = "Data source: ???\n* p < .05, ** p < .01, *** p < .001"
)
# Remove the temporary 'Signif' column
anova_df <- anova_df %>% select(-Signif)
# 6) Create a "nice_table" (depending on your library; e.g. expss, pixiedust, etc.)
#    This step will vary based on how you format tables in your workflow.
regression_table <- nice_table(
anova_df,
title = c("Table X", "ANOVA Model Summary"),
note  = "Data source: ???\n* p < .05, ** p < .01, *** p < .001"
)
# 7) (Optional) Adjust column widths
regression_table <- width(regression_table, j = 1, width = 2)
regression_table <- width(regression_table, j = 2:5, width = 1)
# 8) Save as an SVG file
save_as_image(regression_table, path = "ANOVA_Table.svg")
regression_table
regression_table <- width(regression_table, j = 2:5, width = 1.5)
regression_table
# 8) Save as an SVG file
save_as_image(regression_table, path = "GEO_ANOVA_Table.svg")
regression_table <- width(regression_table, j = 2:5, width = 2)
regression_table
# 8) Save as an SVG file
save_as_image(regression_table, path = "GEO_ANOVA_Table.svg")
anova_model
View(anova_df)
anova_df$`Pr(>F)` <- (anova_df$`Pr(>F)`, anova_df$Signif)
anova_df$`Pr(>F)` <- paste0(anova_df$`Pr(>F)`, " ", anova_df$Signif)
# Remove the temporary 'Signif' column
anova_df <- anova_df %>% select(-Signif)
# 6) Create a "nice_table" (depending on your library; e.g. expss, pixiedust, etc.)
#    This step will vary based on how you format tables in your workflow.
regression_table <- nice_table(
anova_df,
title = c("Table 10", "ANOVA Model Summary"),
note  = "Data source: HPI data, 1991-2024\n* p < .05, ** p < .01, *** p < .001"
)
# 7) (Optional) Adjust column widths
regression_table <- width(regression_table, j = 1, width = 2)
regression_table <- width(regression_table, j = 2:5, width = 2)
regression_table
anova_model <- Anova(model_interact, type = "III")
anova_model
anova_df <- as.data.frame(anova_model)
# 3) Move row names (Term names) into a column
anova_df$Term <- rownames(anova_df)
anova_df <- anova_df %>%
relocate(Term)  # place 'Term' as the first column
# 4) Rename columns for clarity (match your preference)
colnames(anova_df) <- c("Term", "Sum Sq", "Df", "F value", "Pr(>F)")
# 5) (Optional) Add significance stars next to p-values
anova_df$Signif <- ifelse(anova_df$`Pr(>F)` < .001, "***",
ifelse(anova_df$`Pr(>F)` < .01, "**",
ifelse(anova_df$`Pr(>F)` < .05, "*", "")))
anova_df$`Pr(>F)` <- paste0(anova_df$`Pr(>F)`, " ", anova_df$Signif)
# Remove the temporary 'Signif' column
anova_df <- anova_df %>% select(-Signif)
# 6) Create a "nice_table" (depending on your library; e.g. expss, pixiedust, etc.)
#    This step will vary based on how you format tables in your workflow.
regression_table <- nice_table(
anova_df,
title = c("Table 10", "ANOVA Model Summary"),
note  = "Data source: HPI data, 1991-2024\n* p < .05, ** p < .01, *** p < .001"
)
# 7) (Optional) Adjust column widths
regression_table <- width(regression_table, j = 1, width = 2)
regression_table <- width(regression_table, j = 2:5, width = 2)
regression_table
# 1) Convert ANOVA result to data frame
anova_model <- Anova(model_interact, type = "III")
anova_df <- as.data.frame(anova_model)
# 2) Move row names into a 'Term' column
anova_df$Term <- rownames(anova_df)
rownames(anova_df) <- NULL
# 3) Rename columns for clarity
colnames(anova_df) <- c("Sum Sq", "Df", "F value", "Pr(>F)", "Term")
anova_df <- anova_df[, c("Term", "Sum Sq", "Df", "F value", "Pr(>F)")]
# 4) Create a column for significance stars
anova_df$Signif <- ifelse(anova_df$`Pr(>F)` < 0.001, "***",
ifelse(anova_df$`Pr(>F)` < 0.01, "**",
ifelse(anova_df$`Pr(>F)` < 0.05, "*", "")))
# 5) Format p-values to keep scientific notation for very small ones
anova_df$FormattedP <- ifelse(
anova_df$`Pr(>F)` < 2.2e-16,
"< 2.2e-16",  # or whatever threshold text you'd like
format(anova_df$`Pr(>F)`, scientific = TRUE, digits = 3)
)
# 6) Merge formatted p-value with significance stars
anova_df$`Pr(>F)` <- paste(anova_df$FormattedP, anova_df$Signif)
# 7) Remove temporary columns
anova_df <- anova_df[, ! names(anova_df) %in% c("Signif", "FormattedP")]
# 7) (Optional) Adjust column widths
regression_table <- width(regression_table, j = 1, width = 2)
regression_table <- width(regression_table, j = 2:5, width = 2)
regression_table
regression_table
# 8) Save as an SVG file
save_as_image(regression_table, path = "GEO_ANOVA_Table.svg")
# 1) Convert ANOVA result to data frame
anova_model <- Anova(model_interact, type = "III")
anova_df <- as.data.frame(anova_model)
# 2) Move row names into a 'Term' column
anova_df$Term <- rownames(anova_df)
rownames(anova_df) <- NULL
# 3) Rename columns for clarity
colnames(anova_df) <- c("Sum Sq", "Df", "F value", "Pr(>F)", "Term")
anova_df <- anova_df[, c("Term", "Sum Sq", "Df", "F value", "Pr(>F)")]
# 4) Create a column for significance stars
anova_df$Signif <- ifelse(anova_df$`Pr(>F)` < 0.001, "***",
ifelse(anova_df$`Pr(>F)` < 0.01, "**",
ifelse(anova_df$`Pr(>F)` < 0.05, "*", "")))
# 5) Format p-values to keep scientific notation for very small ones
anova_df$FormattedP <- ifelse(
anova_df$`Pr(>F)` < 2.2e-16,
"< 2.2e-16",  # or whatever threshold text you'd like
format(anova_df$`Pr(>F)`, scientific = TRUE, digits = 3)
)
# 6) Merge formatted p-value with significance stars
anova_df$`Pr(>F)` <- paste(anova_df$FormattedP, anova_df$Signif)
# 7) Remove temporary columns
anova_df <- anova_df[, ! names(anova_df) %in% c("Signif", "FormattedP")]
# 7) (Optional) Adjust column widths
regression_table <- width(regression_table, j = 1, width = 2)
regression_table <- width(regression_table, j = 2:5, width = 2)
regression_table
# 5) Format p-values to keep scientific notation for very small ones
anova_df$FormattedP <- ifelse(
anova_df$`Pr(>F)` < 2.2e-16,
"< 2.2e-16",  # or whatever threshold text you'd like
format(anova_df$`Pr(>F)`, scientific = TRUE, digits = 3)
)
# 6) Merge formatted p-value with significance stars
anova_df$`Pr(>F)` <- paste(anova_df$FormattedP, anova_df$Signif)
# 7) Remove temporary columns
anova_df <- anova_df[, ! names(anova_df) %in% c("Signif", "FormattedP")]
# 7) (Optional) Adjust column widths
regression_table <- width(regression_table, j = 1, width = 2)
regression_table <- width(regression_table, j = 2:5, width = 2)
regression_table
regression_table <- nice_table(
anova_df,
title = c("Table X", "Type III ANOVA Results"),
note  = "Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05\nData source: ???"
)
# 7) (Optional) Adjust column widths
regression_table <- width(regression_table, j = 1, width = 2)
regression_table <- width(regression_table, j = 2:5, width = 2)
regression_table
# 1) Convert ANOVA result to data frame
anova_model <- Anova(model_interact, type = "III")
anova_df <- as.data.frame(anova_model)
# 2) Move row names into a 'Term' column
anova_df$Term <- rownames(anova_df)
rownames(anova_df) <- NULL
# 3) Rename columns for clarity
colnames(anova_df) <- c("Sum Sq", "Df", "F value", "Pr(>F)", "Term")
anova_df <- anova_df[, c("Term", "Sum Sq", "Df", "F value", "Pr(>F)")]
# 4) Create a column for significance stars
anova_df$Signif <- ifelse(anova_df$`Pr(>F)` < 0.001, "***",
ifelse(anova_df$`Pr(>F)` < 0.01, "**",
ifelse(anova_df$`Pr(>F)` < 0.05, "*", "")))
# 5) Format p-values to keep scientific notation for very small ones
anova_df$FormattedP <- ifelse(
anova_df$`Pr(>F)` < 2.2e-16,
"< 2.2e-16",  # or whatever threshold text you'd like
format(anova_df$`Pr(>F)`, scientific = TRUE, digits = 3)
)
# 6) Merge formatted p-value with significance stars
anova_df$`Pr(>F)` <- paste(anova_df$FormattedP, anova_df$Signif)
# 7) Remove temporary columns
anova_df <- anova_df[, ! names(anova_df) %in% c("Signif", "FormattedP")]
# 8) Now pass anova_df into your table function
regression_table <- nice_table(
anova_df,
title = c("Table X", "Type III ANOVA"),
note  = "Data source: ???\nSignif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05"
)
# (Optional) Adjust widths if needed
regression_table <- width(regression_table, j = 1, width = 2)
regression_table <- width(regression_table, j = 2:5, width = 1)
regression_table
anova_df$`Pr(>F)`[1]
anova_df$`Pr(>F)`[5]
anova_df$`Pr(>F)`[5] <- NA
# 8) Now pass anova_df into your table function
regression_table <- nice_table(
anova_df,
title = c("Table X", "Type III ANOVA"),
note  = "Data source: ???\nSignif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05"
)
# (Optional) Adjust widths if needed
regression_table <- width(regression_table, j = 1, width = 2)
regression_table <- width(regression_table, j = 2:5, width = 1)
regression_table
# 8) Now pass anova_df into your table function
regression_table <- nice_table(
anova_df,
title = c("Table 10", "Type III ANOVA"),
note  = "Data source: HPI data 1991-2024\nSignif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05"
)
# (Optional) Adjust widths if needed
regression_table <- width(regression_table, j = 1, width = 2)
regression_table <- width(regression_table, j = 2:5, width = 1)
regression_table
regression_table <- width(regression_table, j = 2:5, width = 1.5)
regression_table
# 8) Save as an SVG file
save_as_image(regression_table, path = "GEO_ANOVA_Table.svg")
regression_table <- width(regression_table, j = 2:5, width = 1.8)
regression_table
# 8) Save as an SVG file
save_as_image(regression_table, path = "GEO_ANOVA_Table.svg")
final(x13_result)
View(df_wide)
# Now fit the interaction model with USA as the baseline
model_interact <- lm(Price_NSA ~ Seasonality * Region, data = df_wide)
summary(model_interact)
# Print seasonality comparison
print(seasonality_df)
final(x13_result)
seasonal_comp
seasonal_strength
seasonal_strength
View(df_wide)
